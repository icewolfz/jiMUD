{
  "name": "jimud",
  "productName": "jiMUD",
  "icon": "./assets/icons/png/64x64.png",
  "website": "https://github.com/icewolfz/jiMUD",
  "homepage": "https://github.com/icewolfz/jiMUD",
  "url": "https://github.com/icewolfz/jiMUD/issues",
  "version": "0.4.57",
  "main": "build/main.js",
  "description": "MUD client coded in javascript.",
  "author": "Icewolfz",
  "electronVersion": "2.0.4",
  "email": "icewolfz@users.noreply.github.com",
  "license": "UNLICENSED",
  "repository": {
    "type": "git",
    "url": "https://github.com/icewolfz/jiMUD.git"
  },
  "private": true,
  "scripts": {
    "start": "electron .",
    "debug": "electron . -d",
    "clean": "npm run clean:code && npm run clean:css",
    "compile": "npm run compile:css && npm run compile:themes && npm run compile:worker && npm run compile:common && npm run min && echo Compile Done",
    "compile:debug": "npm run compile:css && npm run compile:themes && npm run compile:worker && npm run compile:common && copy out\\*.js build\\js\\ && xcopy /Y /E /I out\\editor build\\js\\editor && echo Compile Done",
    "compile:debug-linux": "npm run compile:css && npm run compile:themes && npm run compile:worker && npm run compile:common && cp out/*.js build/js/ && cp out/editor build/js/editor && echo Compile Done",
    "compile:common": "tsc -p . --listEmittedFiles",
    "compile:worker": "tsc -p ./src/worker --listEmittedFiles",
    "compile:css": "node-sass src/css/ -o build/css/ --output-style compressed",
    "compile:themes": "node-sass src/themes/ -o build/themes/ --output-style compressed",
    "build": "npm run build:win64 && npm run build:linux",
    "build:osx": "electron-packager . $npm_package_productName --out=dist --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --overwrite --prune --asar --arch=all --platform=darwin --electronVersion=$npm_package_electronVersion --app-version=$npm_package_version --icon=./assets/icons/mac/app.icns",
    "build:win64": "electron-packager . %npm_package_productName% --out=dist --arch=x64 --platform=win32 --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar --overwrite --electronVersion=%npm_package_electronVersion% --app-version=%npm_package_version% --icon=./assets/icons/win/app.ico --win32metadata.CompanyName=\"jiMUD\" --win32metadata.ProductName=\"jiMUD\" --win32metadata.FileDescription=\"jiMUD\" --win32metadata.OriginalFilename=\"jiMUD.exe\" --appCopyright=\"Copyright © 2017-2018 Icewolfz. All rights reserved.\"",
    "build:win32": "electron-packager . %npm_package_productName% --out=dist --arch=ia32 --platform=win32 --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar --overwrite --electronVersion=%npm_package_electronVersion% --app-version=%npm_package_version% --icon=./assets/icons/win/app.ico --win32metadata.CompanyName=\"jiMUD\" --win32metadata.ProductName=\"jiMUD\" --win32metadata.FileDescription=\"jiMUD\" --win32metadata.OriginalFilename=\"jiMUD.exe\" --appCopyright=\"Copyright © 2017-2018 Icewolfz. All rights reserved.\"",
    "build:linux": "electron-packager . $npm_package_productName --out=dist --arch=all --platform=linux --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar.unpackDir=**/node_modules/spellchecker/vendor --overwrite --electronVersion=$npm_package_electronVersion --app-version=$npm_package_version --icon=./assets/icons/png/64x64.png",
    "build:linux32": "electron-packager . $npm_package_productName --out=dist --arch=ia32 --platform=linux --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar.unpackDir=**/node_modules/spellchecker/vendor --overwrite --electronVersion=$npm_package_electronVersion --app-version=$npm_package_version --icon=./assets/icons/png/64x64.png",
    "build:linux64": "electron-packager . $npm_package_productName --out=dist --arch=x64 --platform=linux --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar.unpackDir=**/node_modules/spellchecker/vendor --overwrite --electronVersion=$npm_package_electronVersion --app-version=$npm_package_version --icon=./assets/icons/png/64x64.png",
    "build:linuxarm": "electron-packager . $npm_package_productName --out=dist --arch=armv7l --platform=linux --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar.unpackDir=**/node_modules/spellchecker/vendor --overwrite --electronVersion=$npm_package_electronVersion --app-version=$npm_package_version --icon=./assets/icons/png/64x64.png",
    "build:linuxwin": "electron-packager . %npm_package_productName% --out=dist --arch=all --platform=linux --ignore=\"^/(out|dist|.vscode|_raw|_bak|src|_test)$\" --prune --asar.unpackDir=**/node_modules/spellchecker/vendor --overwrite --electronVersion=%npm_package_electronVersion% --app-version=%npm_package_version% --icon=./assets/icons/png/64x64.png",
    "package": "npm run package:winall && npm run package:linux",
    "package:winall": "npm run package:win && npm run package:winportable",
    "package:win": "npm run package:win32 && npm run package:win64",
    "package:win32": "node_modules/.bin/build --pd=dist/jiMUD-win32-ia32/ --win --ia32 && ren \"dist\\jiMUD_Setup_%npm_package_version%_Windows.exe\" jiMUD_%npm_package_version%_Windows-ia32.exe",
    "package:win64": "node_modules/.bin/build --pd=dist/jiMUD-win32-x64/ --win --x64 && ren \"dist\\jiMUD_Setup_%npm_package_version%_Windows.exe\" jiMUD_%npm_package_version%_Windows-x64.exe",
    "package:win32-all": "node_modules/.bin/build --pd=dist/jiMUD-win32-ia32/ --win nsis portable --ia32 && ren \"dist\\jiMUD_Setup_%npm_package_version%_Windows.exe\" jiMUD_%npm_package_version%_Windows-ia32.exe && ren \"dist\\jiMUD_%npm_package_version%_Windows_portable.exe\" jiMUD_%npm_package_version%_Windows_portable-ia32.exe",
    "package:win64-all": "node_modules/.bin/build --pd=dist/jiMUD-win32-x64/ --win nsis portable --x64 && ren \"dist\\jiMUD_Setup_%npm_package_version%_Windows.exe\" jiMUD_%npm_package_version%_Windows-x64.exe && ren \"dist\\jiMUD_%npm_package_version%_Windows_portable.exe\" jiMUD_%npm_package_version%_Windows_portable-x64.exe",
    "package:winportable": "npm run package:winportable32 && npm run package:winportable64",
    "package:winportable64": "node_modules/.bin/build --pd=dist/jiMUD-win32-x64/ --win portable:x64 && ren \"dist\\jiMUD_%npm_package_version%_Windows_portable.exe\" jiMUD_%npm_package_version%_Windows_portable-x64.exe",
    "package:winportable32": "node_modules/.bin/build --pd=dist/jiMUD-win32-ia32/ --win portable:ia32 && ren \"dist\\jiMUD_%npm_package_version%_Windows_portable.exe\" jiMUD_%npm_package_version%_Windows_portable-ia32.exe",
    "package:osx": "hdiutil create -format UDZO -srcfolder dist/jiMUD-darwin-x64/jiMUD.app dist/jiMUD_Mac.dmg",
    "package:linuxall": "package:linux && package:linux-other",
    "package:linuxb": "cd dist/ && tar -jcvf jiMUD_${npm_package_version}_Linux_x64.tar.bz2 jiMUD-linux-x64 && tar -jcvf jiMUD_${npm_package_version}_Linux_ia32.tar.bz2 jiMUD-linux-ia32 && tar -jcvf jiMUD_${npm_package_version}_Linux_armv7l.tar.bz2 jiMUD-linux-armv7l && cd ../",
    "package:linux": "cd dist/ && tar -Jcvf jiMUD_${npm_package_version}_Linux_x64.tar.xz jiMUD-linux-x64 && tar -Jcvf jiMUD_${npm_package_version}_Linux_ia32.tar.xz jiMUD-linux-ia32 && tar -Jcvf jiMUD_${npm_package_version}_Linux_armv7l.tar.xz jiMUD-linux-armv7l && cd ../",
    "package:linux32": "cd dist/ && tar -Jcvf jiMUD_${npm_package_version}_Linux_ia32.tar.xz jiMUD-linux-ia32 && cd ../",
    "package:linux64": "cd dist/ && tar -Jcvf jiMUD_${npm_package_version}_Linux_x64.tar.xz jiMUD-linux-x64 && cd ../",
    "package:linuxarm": "cd dist/ && tar -Jcvf jiMUD_${npm_package_version}_Linux_armv7l.tar.xz jiMUD-linux-armv7l && cd ../",
    "package:linuxwin": "cd dist && \"C:\\Program Files\\7-Zip\\7z.exe\" a -r -mx9 jiMUD_%npm_package_version%_Linux_x64.7z jiMUD-linux-x64 && \"C:\\Program Files\\7-Zip\\7z.exe\" a -r -mx9 jiMUD_%npm_package_version%_Linux_ia32.7z jiMUD-linux-ia32 && \"C:\\Program Files\\7-Zip\\7z.exe\" a -r -mx9 jiMUD_%npm_package_version%_Linux_armv7l.7z jiMUD-linux-armv7l && cd ../",
    "package:linux-other": "npm run package:linux-other32 && npm run package:linux-other64 && npm run package:linux-otherarm",
    "package:linux-other32": "build --pd=dist/jiMUD-linux-ia32/ --l deb AppImage rpm --ia32",
    "package:linux-other64": "build --pd=dist/jiMUD-linux-x64/ --l deb AppImage rpm --x64",
    "package:linux-otherarm": "build --pd=dist/jiMUD-linux-armv7l/ --l deb AppImage rpm --armv7l",
    "package:linux-all": "npm run package:linux-other32 && npm run package:linux-other64 && npm run package:linux-otherarm",
    "package:linux-all32": "build --pd=dist/jiMUD-linux-ia32/ --l deb AppImage rpm tar.xz --ia32",
    "package:linux-all64": "build --pd=dist/jiMUD-linux-x64/ --l deb AppImage rpm tar.xz --x64",
    "package:linux-allArm": "build --pd=dist/jiMUD-linux-armv7l/ --l deb AppImage rpm tar.xz --armv7l",
    "min": "./node_modules/.bin/babili --minified out -d build/js",
    "min:common": "./node_modules/.bin/babili --minified out/common -d build/js",
    "min:worker": "./node_modules/.bin/babili --minified out/worker -d build/js",
    "rebuild:win64": "./node_modules/.bin/electron-rebuild -f -p",
    "rebuild:win32": "./node_modules/.bin/electron-rebuild -a=ia32 -f -p",
    "rebuild:linux32": "./node_modules/.bin/electron-rebuild -a=ia32 -f -p",
    "rebuild:linux64": "./node_modules/.bin/electron-rebuild -a=x64 -f -p",
    "rebuild:linuxarm": "./node_modules/.bin/electron-rebuild -a=arm -f -p",
    "rebuild:osx": "./node_modules/.bin/electron-rebuild -a=x64 -f -p",
    "release:win32": "npm run compile && npm run rebuild:win32 && npm run build:win32 && npm run package:win32-all",
    "release:win64": "npm run compile && npm run rebuild:win64 && npm run build:win64 && npm run package:win64-all",
    "release:linux32": "npm run compile && npm run rebuild:linux32 && npm run build:linux32 && npm run package:linux-all32",
    "release:linux64": "npm run compile && npm run rebuild:linux64 && npm run build:linux64 && npm run package:linux-all64",
    "release:linuxarm": "npm run compile && npm run rebuild:linuxarm && npm run build:linux64 && npm run package:linuxarm && sleep 2 && npm run package:linux-otherarm",
    "release:win": "npm run compile && npm run rebuild:win32 && npm run build:win32 && npm run package:win32-all && npm run rebuild:win64 && npm run build:win64 && npm run package:win64-all",
    "release:linux": "npm run compile && npm run rebuild:linux32 && npm run build:linux32 && npm run package:linux-all32 && npm run rebuild:linux64 && npm run build:linux64 && npm run package:linux-all64",
    "release:osx": "npm run compile && npm run rebuild:osx && npm run build:osx && npm run package:osx && sleep 2 && npm run package:osx",
    "clean:code": "del /q .\\out\\*.js && del /q .\\out\\editor\\*.js && del /q .\\build\\js\\*.js && del /q .\\build\\js\\editor\\*.js",
    "clean:css": "del /q .\\build\\css\\*.css",
    "clean:dist": "rm -rf ./dist"
  },
  "devDependencies": {
    "@types/bootstrap": "^3.3.39",
    "@types/jquery": "^2.0.49",
    "@types/node": "^7.0.61",
    "babel-cli": "^6.26.0",
    "babili": "^0.1.4",
    "devtron": "^1.4.0",
    "electron": "^2.0.4",
    "electron-builder": "^20.11.1",
    "electron-installer-dmg": "^0.2.1",
    "electron-local-crash-reporter": "^1.0.2",
    "electron-packager": "^8.7.2",
    "electron-rebuild": "^1.7.3",
    "eslint": "^4.19.1",
    "eslint-plugin-html": "^4.0.3",
    "node-abi": "^2.4.0"
  },
  "build": {
    "appId": "jiMUD",
    "win": {
      "icon": "./assets/icons/win/app.ico"
    },
    "nsis": {
      "installerIcon": "./assets/icons/win/app.ico",
      "artifactName": "${productName}_Setup_${version}_Windows-${arch}.${ext}"
    },
    "portable": {
      "artifactName": "${productName}_${version}_Windows_portable-${arch}.${ext}"
    },
    "linux": {
      "maintainer": "icewolfz",
      "icon": "./assets/icons/png/",
      "category": "Game;Network;",
      "synopsis": "MUD client coded in javascript.",
      "extraResources": [
        {
          "from": "node_modules/spellchecker/vendor",
          "to": "app.asar.unpacked/node_modules/spellchecker/vendor",
          "filter": "**/*"
        }
      ]
    }
  },
  "dependencies": {
    "buzz": "^1.2.1",
    "chokidar": "^2.0.4",
    "drivelist": "^6.2.2",
    "font-manager": "^0.3.0",
    "fs-extra": "^6.0.1",
    "jquery": "^3.3.1",
    "lz-string": "^1.4.4",
    "mathjs-expression-parser": "^1.0.0",
    "moment": "^2.22.1",
    "monaco-editor": "^0.13.1",
    "resize-observer-polyfill": "^1.5.0",
    "rgbcolor": "^1.0.1",
    "spellchecker": "^3.4.4",
    "sqlite3": "^3.1.13",
    "tmp": "0.0.33",
    "yargs-parser": "^10.0.0"
  }
}
